CONST INT CONST0 1
VAR INT VAR0 1
VAR INT VAR1 7
VAR INT VAR2 7
VAR INT VAR3 1
FUNC DEF VOID FUNC0
PRINTF STR STRING0 test printf
PRINTF STR STRING1 This is a string
PRINTF EXP 5 *
PRINTF STR STRING2 This is a number:
PRINTF EXP 5 *
RETURN * * *
FUNC DEF VOID FUNC1
VAR INT VAR4 1
VAR INT VAR5 1
VAR INT VAR6 1
PRINTF STR STRING3 test scanf
SCANF VAR4 * *
SCANF VAR5 * *
SCANF VAR6 * *
PRINTF STR STRING4 Entered numbers are:
PRINTF EXP VAR4 *
PRINTF EXP VAR5 *
PRINTF EXP VAR6 *
RETURN * * *
FUNC DEF INT FUNC2
FUNC PARAM INT VAR7
BGT VAR7 1 LABEL0
RETURN 1 * *
B LABEL1 * *
LABEL LABEL0 : *
TEMP TEMP0 * *
SUB TEMP0 VAR7 1
PUSH VAR7 * *
PUSH TEMP0 * *
PUSH $ra * *
PUSH TEMP0 * *
CALL FUNC FUNC2 *
POP $ra * *
POP TEMP0 * *
POP VAR7 * *
TEMP TEMP1 * *
ASS TEMP1 $v0 *
TEMP TEMP2 * *
TEMP TEMP3 * *
SUB TEMP3 VAR7 2
PUSH VAR7 * *
PUSH TEMP0 * *
PUSH TEMP1 * *
PUSH TEMP2 * *
PUSH TEMP3 * *
PUSH $ra * *
PUSH TEMP3 * *
CALL FUNC FUNC2 *
POP $ra * *
POP TEMP3 * *
POP TEMP2 * *
POP TEMP1 * *
POP TEMP0 * *
POP VAR7 * *
TEMP TEMP4 * *
ASS TEMP4 $v0 *
ADD TEMP2 TEMP1 TEMP4
RETURN TEMP2 * *
LABEL LABEL1 : *
RETURN * * *
FUNC DEF VOID FUNC3
PRINTF STR STRING5 test recursion:
PRINTF STR STRING6 fib(5)=
PUSH $ra * *
PUSH 5 * *
CALL FUNC FUNC2 *
POP $ra * *
TEMP TEMP5 * *
ASS TEMP5 $v0 *
PRINTF EXP TEMP5 *
RETURN * * *
FUNC DEF VOID FUNC4
CONST INT CONST1 5
CONST INT CONST2 10
CONST INT CONST3 5
CONST INT CONST4 10
PRINTF STR STRING7 test condition:
BLE CONST2 CONST3 LABEL2
PRINTF STR STRING8 Greater correct
B LABEL3 * *
LABEL LABEL2 : *
PRINTF STR STRING9 Greater Error
LABEL LABEL3 : *
BLT CONST1 CONST4 LABEL4
PRINTF STR STRING10 Greater or equal error
B LABEL5 * *
LABEL LABEL4 : *
PRINTF STR STRING11 Greater or equal correct
LABEL LABEL5 : *
BNE CONST1 CONST3 LABEL6
PRINTF STR STRING12 Equal correct
B LABEL7 * *
LABEL LABEL6 : *
PRINTF STR STRING13 Equal error
LABEL LABEL7 : *
BEQ CONST1 CONST3 LABEL8
PRINTF STR STRING14 Not equal error
B LABEL9 * *
LABEL LABEL8 : *
PRINTF STR STRING15 Not equal correct
LABEL LABEL9 : *
BGE CONST2 CONST3 LABEL10
PRINTF STR STRING16 Less Error
B LABEL11 * *
LABEL LABEL10 : *
PRINTF STR STRING17 Less correct
LABEL LABEL11 : *
BGT CONST2 CONST3 LABEL12
PRINTF STR STRING18 Less or equal error
B LABEL13 * *
LABEL LABEL12 : *
PRINTF STR STRING19 Less or equal correct
LABEL LABEL13 : *
BEQZ CONST2 LABEL14 *
PRINTF STR STRING20 Not Zero correct
B LABEL15 * *
LABEL LABEL14 : *
PRINTF STR STRING21 Not Zero error
LABEL LABEL15 : *
RETURN * * *
FUNC DEF VOID FUNC5
VAR INT VAR8 1
PRINTF STR STRING22 test for
PRINTF STR STRING23 print 0 to 9
ASS VAR8 0 *
LABEL LABEL17 : *
BGE VAR8 10 LABEL16
PRINTF EXP VAR8 *
ADD VAR8 VAR8 1
B LABEL17 * *
LABEL LABEL16 : *
RETURN * * *
FUNC DEF VOID FUNC6
VAR INT VAR9 1
PRINTF STR STRING24 test do while
PRINTF STR STRING25 print 10 to 0
ASS VAR9 10 *
LABEL LABEL18 : *
PRINTF EXP VAR9 *
TEMP TEMP6 * *
SUB TEMP6 VAR9 1
ASS VAR9 TEMP6 *
BLT VAR9 0 LABEL19
B LABEL18 * *
LABEL LABEL19 : *
RETURN * * *
FUNC DEF VOID FUNC7
VAR INT VAR10 3
VAR INT VAR11 3
VAR INT VAR12 1
PRINTF STR STRING26 test array
ARRSET VAR10 0 5
TEMP TEMP7 * *
ARRGET TEMP7 VAR10 0
ARRSET VAR11 2 TEMP7
TEMP TEMP8 * *
ARRGET TEMP8 VAR11 2
ASS VAR12 TEMP8 *
ARRSET VAR10 2 VAR12
PRINTF STR STRING27 arr[2]=
TEMP TEMP9 * *
ARRGET TEMP9 VAR10 2
PRINTF EXP TEMP9 *
RETURN * * *
FUNC DEF INT FUNC8
FUNC PARAM INT VAR13
FUNC PARAM INT VAR14
TEMP TEMP10 * *
ADD TEMP10 VAR13 VAR14
RETURN TEMP10 * *
RETURN * * *
FUNC DEF INT FUNC9
FUNC PARAM INT VAR15
FUNC PARAM INT VAR16
TEMP TEMP11 * *
MUL TEMP11 VAR15 VAR16
RETURN TEMP11 * *
RETURN * * *
FUNC DEF VOID FUNC10
CONST INT CONST5 7
CONST INT CONST6 3
PRINTF STR STRING28 test expression
TEMP TEMP12 * *
ADD TEMP12 CONST5 CONST6
PRINTF EXP TEMP12 *
TEMP TEMP13 * *
SUB TEMP13 CONST5 CONST6
PRINTF EXP TEMP13 *
TEMP TEMP14 * *
MUL TEMP14 CONST5 CONST6
PRINTF EXP TEMP14 *
TEMP TEMP15 * *
DIV TEMP15 CONST5 CONST6
PRINTF EXP TEMP15 *
TEMP TEMP16 * *
ADD TEMP16 CONST5 CONST6
TEMP TEMP17 * *
TEMP TEMP18 * *
ADD TEMP18 CONST5 CONST6
MUL TEMP17 TEMP16 TEMP18
TEMP TEMP19 * *
TEMP TEMP20 * *
SUB TEMP20 CONST5 CONST6
MUL TEMP19 TEMP17 TEMP20
TEMP TEMP21 * *
TEMP TEMP22 * *
ADD TEMP22 CONST5 CONST6
TEMP TEMP23 * *
ADD TEMP23 TEMP22 CONST5
DIV TEMP21 TEMP19 TEMP23
PRINTF EXP TEMP21 *
PUSH CONST5 * *
PUSH CONST6 * *
PUSH TEMP12 * *
PUSH TEMP13 * *
PUSH TEMP14 * *
PUSH TEMP20 * *
PUSH TEMP15 * *
PUSH TEMP16 * *
PUSH TEMP17 * *
PUSH TEMP18 * *
PUSH TEMP19 * *
PUSH TEMP21 * *
PUSH TEMP22 * *
PUSH TEMP23 * *
PUSH $ra * *
PUSH 5 * *
CALL FUNC FUNC2 *
POP $ra * *
POP TEMP23 * *
POP TEMP22 * *
POP TEMP21 * *
POP TEMP19 * *
POP TEMP18 * *
POP TEMP17 * *
POP TEMP16 * *
POP TEMP15 * *
POP TEMP20 * *
POP TEMP14 * *
POP TEMP13 * *
POP TEMP12 * *
POP CONST6 * *
POP CONST5 * *
TEMP TEMP24 * *
ASS TEMP24 $v0 *
TEMP TEMP25 * *
MUL TEMP25 TEMP24 3
TEMP TEMP26 * *
ADD TEMP26 TEMP25 2
PRINTF EXP TEMP26 *
PUSH CONST5 * *
PUSH CONST6 * *
PUSH TEMP12 * *
PUSH TEMP13 * *
PUSH TEMP14 * *
PUSH TEMP20 * *
PUSH TEMP15 * *
PUSH TEMP16 * *
PUSH TEMP17 * *
PUSH TEMP25 * *
PUSH TEMP18 * *
PUSH TEMP24 * *
PUSH TEMP19 * *
PUSH TEMP21 * *
PUSH TEMP22 * *
PUSH TEMP23 * *
PUSH TEMP26 * *
PUSH $ra * *
PUSH CONST5 * *
PUSH CONST6 * *
CALL FUNC FUNC8 *
POP $ra * *
POP TEMP26 * *
POP TEMP23 * *
POP TEMP22 * *
POP TEMP21 * *
POP TEMP19 * *
POP TEMP24 * *
POP TEMP18 * *
POP TEMP25 * *
POP TEMP17 * *
POP TEMP16 * *
POP TEMP15 * *
POP TEMP20 * *
POP TEMP14 * *
POP TEMP13 * *
POP TEMP12 * *
POP CONST6 * *
POP CONST5 * *
TEMP TEMP27 * *
ASS TEMP27 $v0 *
TEMP TEMP28 * *
PUSH CONST5 * *
PUSH CONST6 * *
PUSH TEMP12 * *
PUSH TEMP13 * *
PUSH TEMP14 * *
PUSH TEMP20 * *
PUSH TEMP28 * *
PUSH TEMP15 * *
PUSH TEMP16 * *
PUSH TEMP17 * *
PUSH TEMP25 * *
PUSH TEMP18 * *
PUSH TEMP24 * *
PUSH TEMP19 * *
PUSH TEMP21 * *
PUSH TEMP22 * *
PUSH TEMP23 * *
PUSH TEMP26 * *
PUSH TEMP27 * *
PUSH $ra * *
PUSH CONST5 * *
PUSH CONST6 * *
CALL FUNC FUNC9 *
POP $ra * *
POP TEMP27 * *
POP TEMP26 * *
POP TEMP23 * *
POP TEMP22 * *
POP TEMP21 * *
POP TEMP19 * *
POP TEMP24 * *
POP TEMP18 * *
POP TEMP25 * *
POP TEMP17 * *
POP TEMP16 * *
POP TEMP15 * *
POP TEMP28 * *
POP TEMP20 * *
POP TEMP14 * *
POP TEMP13 * *
POP TEMP12 * *
POP CONST6 * *
POP CONST5 * *
TEMP TEMP29 * *
ASS TEMP29 $v0 *
ADD TEMP28 TEMP27 TEMP29
PRINTF EXP TEMP28 *
RETURN * * *
FUNC DEF VOID FUNC11
CONST INT CONST7 5
PRINTF STR STRING29 test global
PRINTF EXP CONST7 *
PRINTF EXP VAR0 *
ASS VAR0 10 *
PRINTF EXP VAR0 *
RETURN * * *
FUNC DEF VOID FUNC12
FUNC PARAM INT VAR17
VAR INT VAR18 1
BLT VAR17 VAR3 LABEL20
ASS VAR18 0 *
LABEL LABEL22 : *
BGE VAR18 VAR3 LABEL21
TEMP TEMP30 * *
ARRGET TEMP30 VAR2 VAR18
PRINTF EXP TEMP30 *
ADD VAR18 VAR18 1
B LABEL22 * *
LABEL LABEL21 : *
RETURN * * *
LABEL LABEL20 : *
ASS VAR18 0 *
LABEL LABEL24 : *
BGE VAR18 VAR3 LABEL23
TEMP TEMP31 * *
ARRGET TEMP31 VAR1 VAR18
BNE TEMP31 0 LABEL25
TEMP TEMP32 * *
ADD TEMP32 VAR18 1
ARRSET VAR2 VAR17 TEMP32
ARRSET VAR1 VAR18 1
TEMP TEMP33 * *
ADD TEMP33 VAR17 1
PUSH VAR17 * *
PUSH VAR18 * *
PUSH TEMP30 * *
PUSH TEMP31 * *
PUSH TEMP32 * *
PUSH TEMP33 * *
PUSH $ra * *
PUSH TEMP33 * *
CALL FUNC FUNC12 *
POP $ra * *
POP TEMP33 * *
POP TEMP32 * *
POP TEMP31 * *
POP TEMP30 * *
POP VAR18 * *
POP VAR17 * *
ARRSET VAR1 VAR18 0
LABEL LABEL25 : *
ADD VAR18 VAR18 1
B LABEL24 * *
LABEL LABEL23 : *
RETURN * * *
FUNC DEF VOID MAIN
ASS VAR3 3 *
PUSH $ra * *
CALL FUNC FUNC0 *
POP $ra * *
PUSH $ra * *
CALL FUNC FUNC1 *
POP $ra * *
PUSH $ra * *
CALL FUNC FUNC4 *
POP $ra * *
PUSH $ra * *
CALL FUNC FUNC5 *
POP $ra * *
PUSH $ra * *
CALL FUNC FUNC6 *
POP $ra * *
PUSH $ra * *
CALL FUNC FUNC7 *
POP $ra * *
PUSH $ra * *
CALL FUNC FUNC10 *
POP $ra * *
PUSH $ra * *
CALL FUNC FUNC3 *
POP $ra * *
PUSH $ra * *
CALL FUNC FUNC11 *
POP $ra * *
PRINTF STR STRING30 test permutation
PUSH $ra * *
PUSH 0 * *
CALL FUNC FUNC12 *
POP $ra * *
