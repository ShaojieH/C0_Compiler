const int a = 1;
int b;
int symbol[7], array[7];
int n;

void testPrintf(){
	int a;
	char c;
	a = 10;
	c = 'c';
	printf("test printf");
	printf("This is a string");
	printf(5);
	printf("This is a number:", 5);
	printf("This is another number:", a);
	printf("line\n\n\n\n");
	printf("This is a char:", 'f');
	printf("This is another char:", c);
}

void testScanf(){
	int a, b, c;
	char d, e, f;
	printf("test scanf");
	scanf(a, b, c);
	printf("Entered numbers are:");
	printf(a);
	printf(b);
	printf(c);
	scanf(d, e, f);
	printf("Entered char are:");
	printf(d);
	printf(e);
	printf(f);
}

int fib(int i){
	int extra[5];
	if(i <= 1)	return (1);
	else return (fib(i-1) + fib(i-2));
}

void testRecursion(){
	int fib5;
	printf("test recursion:");
	fib5 = fib(5);
	if(fib(5) == 8){
		printf("Recursion correct");
	}
	printf("fib(5)=", fib5);
}

void testCondition(){
	
	const int a0 = 5;
	const int a1 = 10;
	const int b0 = 5;
	const int b1 = 10;

	printf("test condition:");

    if(a1 > b0)
		printf("Greater correct");
    else
        printf("Greater Error");
    if(a0 >= b1)
		printf("Greater or equal error");
	else
		printf("Greater or equal correct");
	if(a0 == b0)
		printf("Equal correct");
	else
		printf("Equal error");
	if(a0 != b0)
		printf("Not equal error");
	else
		printf("Not equal correct");
	if(a1 < b0)
		printf("Less Error");
	else
		printf("Less correct");
	if(a1 <= b0)
		printf("Less or equal error");
	else 
		printf("Less or equal correct");
	if(a1)
		printf("Not Zero correct");
	else 
		printf("Not Zero error");
}

void testFor(){
	int i;
	printf("test for");
	printf("print 0 to 9");
	for(i=0; i<10; i = i + 1){
		printf(i);
	}
}
void testDoWhile(){
	int i;
	printf("test do while");
	printf("print 10 to 0");
	i = 10;
	do{
		printf(i);
		i = i - 1;
	}while(i >= 0)

}

void testArray(){
	int arr[3];
	int arr2[3];
	int a;
	printf("test array");

	arr[0] = 5;
	arr2[2] = arr[0];
	a = arr2[2];
	arr[2] = a;
	printf("arr[2]=", arr[2]);
	if(arr[2] == 5){
		printf("array correct");
	}
}

int add(int a, int b){
	return (a+b);
}

int mul(int a, int b){
	return (a*b);
}

void testExpression(){
	const int a = 7, b = 3;
	printf("test expression");
	printf(a + b);
	printf(a - b);
	printf(a * b);
	printf(a / b);
	printf((a+b)*(a+b)*(a-b)/(a+b+a));
	printf(fib(5) * 3 + 2);
	printf(add(a,b) + mul(a,b));
}

void testGlobal(){
	const int a = 5;
	printf("test global");
	printf(a);
	printf(b);
	b = 10;
	printf(b);
}

void testPermutation(int index){


	int i;
	if(index >= n){
		for(i = 0; i < n; i = i + 1){
			printf(array[i]);
		}
		printf("");
		return;
	}
	
	for(i = 0; i<n; i = i + 1){
		if(symbol[i] == 0){
			array[index] = i+1;
			symbol[i] = 1;
			testPermutation(index+1);
			symbol[i] = 0;
		}
	}
}

void main(){
	n = 3;
	testPrintf();
	testScanf();
	testCondition();
	testFor();
	testDoWhile();
	testArray();
	testExpression();
	testRecursion();
	testGlobal();
	
	printf("test permutation");
	testPermutation(0);
}
